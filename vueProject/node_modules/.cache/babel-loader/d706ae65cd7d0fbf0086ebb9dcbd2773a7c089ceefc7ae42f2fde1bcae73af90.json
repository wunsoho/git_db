{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport treeList from \"@/components/measure/Tree-list.vue\";\nimport { RouterLink, useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport { ref, computed } from \"vue\";\nexport default {\n  name: \"group-list\",\n  setup() {\n    const router = useRouter();\n    var group_name = ref('');\n    var titleclick = ref(true);\n    var chartclick = ref(false);\n    var check = ref(true);\n    var list_number = ref([{\n      index: \"1\",\n      category_title: \"1차 카테고리\"\n    }, {\n      index: \"2\",\n      category_title: \"2차 카테고리\"\n    }, {\n      index: \"3\",\n      category_title: \"3차 카테고리\"\n    }]);\n    var list_category = ref([]);\n    var select_group = ref([\n      //{category:\"2\" ,image:'상', name:\"상경대학\"},\n      //{category:\"2\" ,image:'공', name:\"공과대학\"},\n    ]);\n    function clickList() {\n      titleclick.value = true, chartclick.value = false;\n    }\n    function clickChart() {\n      titleclick.value = false, chartclick.value = true;\n    }\n    function select_category(category) {\n      //select_group.add(name)\n      if (category.check != true) {\n        select_group.value.push({\n          category: category.category,\n          image: category.image,\n          name: category.name\n        });\n        category.check = true;\n      } else {\n        select_group.value.pop({\n          category: category.category,\n          image: category.image,\n          name: category.name\n        });\n        category.check = false;\n      }\n    }\n    const store = useStore();\n    function click_regi_page(name) {\n      console.log(name);\n      group_name.value = name;\n      store.commit(\"SetName\", group_name.value);\n    }\n    const config = {\n      headers: {\n        Authorization: \"Bearer\" + \" \" + store.state.accessToken,\n        \"Content-Type\": \"text/html; charset=utf-8\"\n      }\n    };\n    async function title_get_list_() {\n      console.log(\"dawdaw\");\n      await axios.get(\"Company/Organization/Simple/samsung\", config).then(res => {\n        console.log(res.data);\n        this.list_category = res.data;\n        for (let i = 0; i < res.data.length; i++) {\n          this.list_category[i].image = this.list_category[i].name[0];\n        }\n      }).catch(error => {\n        alert(\"로그인 시간이 만료되었습니다.\");\n        console.log(error);\n        router.push('/');\n      }).finally(() => {});\n    }\n    return {\n      group_name,\n      titleclick,\n      chartclick,\n      check,\n      list_number,\n      list_category,\n      select_group,\n      clickList,\n      clickChart,\n      select_category,\n      click_regi_page,\n      title_get_list_\n    };\n  },\n  created() {\n    this.title_get_list_();\n  },\n  methods: {},\n  components: {\n    treeList,\n    RouterLink\n  }\n};","map":{"version":3,"names":["axios","treeList","RouterLink","useRouter","useStore","ref","computed","name","setup","router","group_name","titleclick","chartclick","check","list_number","index","category_title","list_category","select_group","clickList","value","clickChart","select_category","category","push","image","pop","store","click_regi_page","console","log","commit","config","headers","Authorization","state","accessToken","title_get_list_","get","then","res","data","i","length","catch","error","alert","finally","created","methods","components"],"sources":["C:\\Users\\User\\Desktop\\대학\\4학년 1학기\\탄소\\co2-emission-management\\vueProject\\src\\components\\measure\\Group-list.vue"],"sourcesContent":["<!-- 탄소 배출 측정 첫 화면 -->\r\n<template>\r\n    <div class =\"body\"> \r\n        <div class=\"board\" >   \r\n            <!-- 조직목록, 조직도 화면 -->\r\n            <div class=\"left-bar\" style=\"float: left; height: inherit; width:27vw; overflow: auto;\">\r\n                <!-- 조직목록, 조직도 버튼 -->\r\n                <div class=\"title\" style=\"position:\">\r\n                    <button :class=\"{list_title : titleclick  ,'non_click_title' : chartclick}\" @click=\"clickList\">조직 목록</button>\r\n                    <button :class=\"{list_title : chartclick , 'non_click_title' : titleclick}\" @click=\"clickChart\">조직도</button>\r\n                </div>\r\n                <!-- 버튼 이벤트에 따른 조직목록, 조직도 화면 -->\r\n                <div :class=\"{list : titleclick}\" v-if=\"titleclick == true\">\r\n                    <!-- 조직 목록 표시 -->\r\n                    <ul class=\"list-list\" style=\"list-style:none; font-weight:600 ; margin-right: 2vw;\">\r\n                        <li style=\" margin-bottom:5vh; font-size: 0.8vw; color: #3D3E3F;\" v-for=\"number in list_number\">{{number.category_title}}\r\n                            <div v-for=\"category in list_category\">\r\n                            <li class=\"category_content\" v-if=\"number.index == category.category\" @click=\"select_category(category)\">\r\n                                <img style=\"margin-right:1.3vw; width: 3vw; vertical-align: middle;\" src=\"@/assets/building.png\" alt=\"\" v-if=\"number.index==1\">\r\n                                <h class =\"category_image2\" v-if=\"number.index!=1\">{{category.image}}</h>{{category.name}}\r\n                                <img src=\"@/assets/check.png\" alt=\"\" style=\"width:1.5vw; margin: 1vw; float: right;\" v-if=\"category.check==true\">\r\n                            </li> \r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                \r\n                <div :class=\"{list : chartclick}\" v-if=\"chartclick == true\">\r\n                    <treeList style=\"margin-left:2vw; font-weight: 700;\"></treeList>\r\n                </div>\r\n            </div>\r\n            <div style =\"border-left : 2px solid #d5d5d5; height : inherit; float: left;\">\r\n            <!-- 체크한 조직 보여지는 화면 -->\r\n            </div>\r\n            <div class=\"right-bar\" style = \"float: left; position:relative; padding: 3%; height:66vh; width:47.146vw; overflow: auto;\">\r\n                <ul calss=\"select_group\" style=\"list-style: none; position: absolute;\">\r\n                   <li class=\"select-list\" v-for=\"group in select_group\">\r\n                    <img style=\"margin-left:1vw; margin-right:2vw; width: 3vw; vertical-align: middle; \" src=\"@/assets/building.png\" alt=\"\" v-if=\"group.category==1\">\r\n                    <h class=\"category_image2\" id=\"right_bar_icon\" v-if=\"group.category!=1\">{{group.image}}</h>{{group.name}}\r\n                    <button class=\"select-btn\"  onclick=\"location.href='/measure/input1';\" @click=\"click_regi_page(group.name)\">+　입력하기</button></li>\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n\r\n.body{\r\n    padding:3%;\r\n    position:relative;\r\n    background: #F8F8F8;;\r\n    width: 85vw;\r\n    height: 75.5vh;\r\n}\r\n\r\n.board{\r\n    position: absolute;\r\n    background: #FFFFFF;\r\n    width: 80vw;\r\n    height: 75vh;\r\n    border-radius: 10px;\r\n    border:2px solid #d5d5d5;\r\n}\r\n\r\n.title{\r\n    width:21vw;\r\n    height: auto;\r\n    background: #F0F2F5;\r\n    opacity: 0.5;\r\n    border-radius: 12px;\r\n    margin: 2vw 3vw 1vw;\r\n    padding: 1%;\r\n}\r\n.category_image2{\r\n    margin-right:1.3vw; \r\n    width: 3vw;\r\n    height: 3vw;\r\n    background: #3DC984;\r\n    line-height: 3vw;\r\n    text-align: center;\r\n    color: #FFFFFF;\r\n    border-radius: 0.6vw;\r\n    display: inline-block;\r\n}\r\n\r\n.group-chart{\r\n    font-family: 'Open Sans';\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    width: 150px;\r\n    height: 35px;\r\n    margin-left: 10px;\r\n    background: #F0F2F5;\r\n    border: 2px;\r\n    border-radius: 10px;\r\n}\r\n.list{\r\n    padding:1vw;\r\n    width:25vw;\r\n    height: 55vh;\r\n    overflow: auto;\r\n}\r\n.category_content{\r\n    margin-top:2.5vh; \r\n    font-size:1vw; \r\n    color: #000000\r\n}\r\n.category_content:hover{\r\n    border-radius: 10px;\r\n    background-color: #f6f6f6;\r\n    \r\n}\r\n.select-list{ /*선택된 카테고리 리스트*/\r\n    border:2px solid #d5d5d5; \r\n    border-radius: 0.8vw; \r\n    margin-bottom: 3vh;\r\n    padding: 0.5%;\r\n    line-height: 10vh;\r\n    height: 10vh;\r\n    width: 44vw;\r\n    font-weight: 600;\r\n    font-size: 1.1vw;\r\n    color: #000000;\r\n    \r\n}\r\n.select-btn{ /*입력하기 버튼*/\r\n    background: #3DC984;\r\n    color:#FFFFFF;\r\n    float: right;\r\n    margin:2.5vh ;\r\n    border-radius: 7px;\r\n    border: none; \r\n    height: 4.5vh;\r\n    width: 7.4vw;\r\n    font-size: 0.8vw;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n}\r\n.select-btn:hover{\r\n    background: #2cb570;\r\n    cursor: pointer;\r\n}\r\n#right_bar_icon{\r\n    margin-left: 1vw;\r\n    margin-right: 2vw;\r\n    margin-top: 1vh;\r\n    height: 3vw;\r\n    width: 3vw;\r\n    line-height: 3vw;\r\n    font-size: 1vw;\r\n    font-weight: 800;\r\n}\r\n\r\n::-webkit-scrollbar{\r\n    display:none;\r\n}\r\n\r\n</style>\r\n    \r\n<style scoped>\r\n    .list_title{\r\n        font-family: 'Open Sans';\r\n        font-weight: 900;\r\n        font-size: 1.2vw;\r\n        line-height: auto;\r\n        width: 10vw;\r\n        height: 2vw;\r\n        background: #ffffff;\r\n        border: none;\r\n        border-radius: 0.5vw;\r\n        color: #3DC984;\r\n     \r\n    }\r\n\r\n    .non_click_title{\r\n        font-family: 'Open Sans';\r\n        font-weight: 900;\r\n        font-size: 1.2vw;\r\n        line-height: 30px;\r\n        width: 10vw;\r\n        height: auto;\r\n        margin-left: 0.5vw;\r\n        background: #F0F2F5;\r\n        border: none;   \r\n    }\r\n</style>\r\n<script>\r\nimport axios from \"axios\";\r\nimport treeList from \"@/components/measure/Tree-list.vue\"\r\nimport { RouterLink,useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\"\r\nimport { ref,computed } from \"vue\"\r\n\r\n    export default {\r\n        name :\"group-list\",\r\n        setup(){\r\n            const router = useRouter();\r\n            \r\n            var group_name = ref('')\r\n            var titleclick = ref(true)\r\n            var chartclick = ref(false)\r\n            var check = ref(true)\r\n\r\n            var list_number = ref([\r\n                    {index:\"1\", category_title: \"1차 카테고리\"},\r\n                    {index:\"2\",category_title: \"2차 카테고리\"},\r\n                    {index:\"3\",category_title: \"3차 카테고리\"}\r\n            ])\r\n            var list_category = ref([\r\n                          \r\n            ])\r\n            var select_group = ref([\r\n                    //{category:\"2\" ,image:'상', name:\"상경대학\"},\r\n                    //{category:\"2\" ,image:'공', name:\"공과대학\"},\r\n            ])\r\n            function clickList(){\r\n                titleclick.value=true,\r\n                chartclick.value=false\r\n            }\r\n            function clickChart(){\r\n                titleclick.value=false,\r\n                chartclick.value=true\r\n            }\r\n            function select_category(category){\r\n                //select_group.add(name)\r\n                if(category.check!=true){\r\n                    select_group.value.push({category:category.category, image:category.image, name:category.name})\r\n                    category.check=true\r\n                }\r\n                else{\r\n                    select_group.value.pop({category:category.category, image:category.image, name:category.name})\r\n                    category.check=false\r\n                }  \r\n            }\r\n            const store = useStore()\r\n            function click_regi_page(name){\r\n                console.log(name)\r\n                group_name.value=name\r\n                store.commit(\"SetName\", group_name.value)\r\n            }\r\n\r\n            const config = {\r\n            headers:{\r\n              Authorization:\"Bearer\"+\" \"+store.state.accessToken,\r\n              \"Content-Type\": \"text/html; charset=utf-8\",\r\n            }\r\n          }\r\n            \r\n\r\n            async function title_get_list_(){\r\n                console.log(\"dawdaw\")\r\n                await axios.get(\"Company/Organization/Simple/samsung\",config).then(res => {\r\n                    console.log(res.data)\r\n                    this.list_category =  res.data\r\n                    for(let i=0;i<res.data.length;i++){\r\n                        this.list_category[i].image =  this.list_category[i].name[0]\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    alert(\"로그인 시간이 만료되었습니다.\")\r\n                    console.log(error)\r\n                    router.push('/');\r\n                })\r\n                .finally(() => {})\r\n            }\r\n\r\n            \r\n            \r\n            return{\r\n                group_name,\r\n                titleclick,\r\n                chartclick,\r\n                check,\r\n                list_number,\r\n                list_category,\r\n                select_group,\r\n                clickList,\r\n                clickChart,\r\n                select_category,\r\n                click_regi_page,\r\n                title_get_list_,\r\n                \r\n            }\r\n        },\r\n        created(){\r\n            this.title_get_list_()\r\n        },\r\n        methods:{\r\n\r\n        },\r\n        components:{\r\n            treeList,\r\n            RouterLink\r\n        },\r\n    }\r\n    \r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}