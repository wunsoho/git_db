{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/search.png';\nconst _hoisted_1 = {\n  style: {\n    \"margin-bottom\": \"3vh\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"measure_btn\",\n  id: \"btn_regi\",\n  onclick: \"location.href='/measure/register';\"\n}, \"+　등록하기\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"measure_btn\",\n  id: \"btn_excle\"\n}, \"엑셀 업로드\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"measure_btn\",\n  id: \"btn_search\",\n  src: _imports_0,\n  alt: \"\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_good_table = _resolveComponent(\"vue-good-table\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    class: \"measure_btn\",\n    id: \"btn_del\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.click_del_btn())\n  }, \"선택삭제\"), _createElementVNode(\"button\", {\n    class: \"measure_btn\",\n    id: \"btn_copy\",\n    onClick: _cache[1] || (_cache[1] = $event => $setup.click_copy_btn())\n  }, \"복사하기\"), _createElementVNode(\"button\", {\n    class: \"measure_btn\",\n    id: \"btn_edit\",\n    onClick: _cache[2] || (_cache[2] = $event => $setup.click_edit_btn())\n  }, \"수정하기\"), _hoisted_2, _hoisted_3, _hoisted_4]), _createVNode(_component_vue_good_table, {\n    onSelectedRowsChange: $setup.selectionChanged,\n    columns: $setup.columns,\n    rows: $setup.rows,\n    \"select-options\": {\n      enabled: true,\n      disableSelectInfo: true,\n      selectOnCheckboxOnly: true\n    },\n    \"sort-options\": {\n      enabled: false\n    },\n    \"pagination-options\": {\n      enabled: true,\n      mode: 'pages',\n      perPage: 5\n    }\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" <template #table-actions>\\r\\n            <button class= \\\"measure_btn\\\" id=\\\"btn_del_input2\\\" @click=\\\"click_del_btn()\\\">선택 삭제</button> \\r\\n            <button class= \\\"measure_btn\\\" id=\\\"btn_edit_input2\\\" @click=\\\"click_edit_btn()\\\" style=\\\"margin-right:1vw; margin-top:1vh; margin-bottom: 1vh;\\\">수정하기</button>\\r\\n          </template> \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onSelectedRowsChange\", \"columns\", \"rows\"])]);\n}","map":{"version":3,"names":["_imports_0","style","_createElementVNode","class","id","onclick","src","alt","_createElementBlock","_hoisted_1","onClick","_cache","$event","$setup","click_del_btn","click_copy_btn","click_edit_btn","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_vue_good_table","onSelectedRowsChange","selectionChanged","columns","rows","enabled","_createCommentVNode"],"sources":["C:\\Users\\User\\Desktop\\대학\\4학년 1학기\\탄소\\co2-emission-management\\vueProject\\src\\components\\measure\\MeasuretableATotal.vue"],"sourcesContent":["<template>\r\n  \r\n  <div>\r\n      <div style=\" margin-bottom : 3vh\">\r\n        <button class=\"measure_btn\" id=\"btn_del\" @click=\"click_del_btn()\">선택삭제</button>\r\n        <button class=\"measure_btn\" id=\"btn_copy\" @click=\"click_copy_btn()\">복사하기</button>\r\n        <button class=\"measure_btn\" id=\"btn_edit\"  @click=\"click_edit_btn()\">수정하기</button>\r\n\r\n        <button class=\"measure_btn\" id=\"btn_regi\"  onclick=\"location.href='/measure/register';\">+　등록하기</button>\r\n        <button class=\"measure_btn\" id=\"btn_excle\">엑셀 업로드</button>\r\n        <img class=\"measure_btn\"  id=\"btn_search\" src=\"@/assets/search.png\" alt=\"\"/>\r\n      </div>\r\n      <vue-good-table\r\n          v-on:selected-rows-change=\"selectionChanged\"\r\n          :columns=\"columns\"\r\n          :rows=\"rows\" \r\n          :select-options=\"{ \r\n            enabled: true,\r\n            disableSelectInfo: true,\r\n            selectOnCheckboxOnly: true,\r\n          }\"\r\n          :sort-options=\"{enabled: false}\"\r\n          :pagination-options=\"{\r\n              enabled: true,\r\n              mode: 'pages',\r\n              perPage: 5\r\n          }\"\r\n          >\r\n          <!-- <template #table-actions>\r\n            <button class= \"measure_btn\" id=\"btn_del_input2\" @click=\"click_del_btn()\">선택 삭제</button> \r\n            <button class= \"measure_btn\" id=\"btn_edit_input2\" @click=\"click_edit_btn()\" style=\"margin-right:1vw; margin-top:1vh; margin-bottom: 1vh;\">수정하기</button>\r\n          </template> -->\r\n      </vue-good-table>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.btn{\r\n  width:20px;\r\n  height: 10px;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport 'vue-good-table-next/dist/vue-good-table-next.css'\r\nimport { VueGoodTable } from 'vue-good-table-next';\r\nimport { useStore } from \"vuex\"\r\nimport { computed, ref} from 'vue';\r\nimport axios from \"axios\";\r\nimport { useRouter } from 'vue-router'\r\n\r\nexport default {\r\n  name: 'my-component',\r\n  setup(){\r\n      var selected_id = ref([])\r\n      var columns= [\r\n        {\r\n          label: '탄소 배출 내용',\r\n          field: 'CarbonActivity',\r\n        },\r\n        {\r\n          label: '활동 데이터',\r\n          field: 'data',\r\n          type: 'number',\r\n        },\r\n        {\r\n          label: '탄소 배출량',\r\n          field: 'emissions',\r\n          type: 'number'\r\n        },\r\n        {\r\n          label: '시작 날짜',\r\n          field: 'StartDate',\r\n          type: 'date',\r\n          dateInputFormat: 'yyyy-MM-dd',\r\n          dateOutputFormat: 'yyyy-MM-dd',\r\n        },\r\n        {\r\n          label: '종료 날짜',\r\n          field: 'EndDate',\r\n          type: 'date',\r\n          dateInputFormat: 'yyyy-MM-dd',\r\n          dateOutputFormat: 'yyyy-MM-dd',\r\n        },\r\n        {\r\n          label: '스코프',\r\n          field: 'scope',\r\n        }\r\n      ]\r\n      var rows = ref([])\r\n\r\n      function selectionChanged(params){\r\n        selected_id.value= (params.selectedRows)\r\n        console.log(\"선택된 행\",selected_id.value)\r\n        //선택된 행들을 리스트 형태로 반환 {0: Proxy, 1: Proxy, 2: Proxy}\r\n      }\r\n\r\n      const store = useStore();\r\n      const router = useRouter();\r\n\r\n      function click_del_btn(){\r\n        store.commit('DelTotalTableContent',selected_id.value); //삭제 버튼 - 한번에 보내도록 개선 필요 \r\n        for(let key in selected_id.value){\r\n          del_carbon_data(selected_id.value[key].id)\r\n        }\r\n        location.reload();\r\n        \r\n      }\r\n      \r\n      function click_copy_btn(){\r\n                console.log(\"복사\",selected_id.value)\r\n                var config = {\r\n                    headers:{\r\n                    \"Authorization\":\"Bearer\"+\" \"+store.state.accessToken\r\n                    }\r\n                }\r\n                for(var row in selected_id.value){\r\n                    const data = (selected_id.value[row])\r\n                    console.log(\"row = \"+JSON.stringify(data))\r\n                    var input_data = {\r\n                        \"CarbonData\": {\r\n                            \"StartDate\":(data.StartDate),\r\n                            \"EndDate\":(data.EndDate),\r\n                            \"Location\": (data.Location),\r\n                            \"Scope\":  (data.scope),\r\n                            \"CarbonActivity\": (data.CarbonActivity),\r\n                            \"CarbonUnit\": (data.Carbonunit),\r\n                            \"usage\": (data.data), //carbon data\r\n                            \"Chief\": \"jeong\",\r\n                            \"Kind\" :(data.kind),\r\n                            \"Division\":\"\"\r\n                        },\r\n                        \"DetailType\":store.state.CarbonCategories[Number(data.Type)],\r\n                        //\"RootCom\":\"samsung\",\r\n                        //\"BelongCom\":\"\",\r\n                        \"Type\":store.state.CarbonCategories[Number(data.DetailType)]\r\n                    }\r\n                    console.log((input_data))\r\n                    get_total_emission(input_data)\r\n                }\r\n                //{id:\"\",content:\"\",data:\"\",emissions:\"\",StartDate:\"\",EndDate:\"\",scope:\"\"}\r\n                async function get_total_emission(input_data){\r\n                    await axios.post(\"/CarbonEmission/samsung\",input_data,config).then(res => {\r\n                        console.log(JSON.stringify(input_data))\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('send data'+JSON.stringify(input_data))\r\n                        console.log(error)\r\n                        \r\n                    })\r\n                    .finally(() => {\r\n                    })\r\n                }\r\n                store.commit('ResetTable')\r\n                location.reload();\r\n            }\r\n\r\n      function click_edit_btn(){\r\n        if(selected_id.value.length == 1){\r\n          console.log(JSON.stringify(selected_id.value)+\"에딧 버튼\")\r\n          store.commit('SetTableKind','total_table')\r\n          store.commit('SetEditOpen',selected_id.value)\r\n        } \r\n        //수정 팝업창, 수정 정보후 store를 이용해서 저장\r\n      }\r\n\r\n\r\n\r\n      const config = {\r\n            headers:{\r\n              Authorization:\"Bearer\"+\" \"+store.state.accessToken,\r\n              \"Content-Type\": \"text/html; charset=utf-8\",\r\n            }\r\n      }\r\n\r\n      var group_name = store.state.group_name\r\n      async function get_data(){\r\n        await axios.get(\"/CarbonEmission/\"+group_name,config).then(res => {\r\n              console.log(res.data)\r\n              \r\n              for(var i=0;i<res.data.length;i++){\r\n                var info_list={id:\"\",content:\"\",data:\"\",emissions:\"\",StartDate:\"\",EndDate:\"\",scope:\"\", category:\"\"}\r\n                info_list.id = res.data[i].id\r\n                info_list.CarbonActivity = res.data[i].CarbonActivity\r\n                info_list.data =  res.data[i].CarbonData + res.data[i].CarbonUnit\r\n                info_list.emissions = res.data[i].CarbonTrans + \"kg\"\r\n                info_list.StartDate = res.data[i].CarbonInfo.StartDate   //api추가되면 수정 \r\n                info_list.EndDate = res.data[i].CarbonInfo.EndDate \r\n                info_list.scope = res.data[i].CarbonInfo.Scope \r\n                console.log(res.data[i].CarbonInfo.Category )\r\n                info_list.Type = res.data[i].CarbonInfo.Category \r\n                rows.value.unshift(info_list)\r\n              }     \r\n          })\r\n          .catch(error => {\r\n              alert(\"로그인 시간이 만료되었습니다.\")\r\n              console.log(error)\r\n              router.push('/');\r\n          })\r\n          .finally(() => {\r\n            console.log(rows.value)\r\n          })\r\n      }\r\n\r\n      async function del_carbon_data(del_id){\r\n        await axios.delete(\"/CarbonEmission/\"+del_id).then(res => {\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            alert(\"삭제에 실패했습니다.\")\r\n            router.push('/measure/input1');\r\n          })\r\n          .finally(() => {\r\n          })\r\n      }\r\n      return{\r\n        selected_id,\r\n        columns,\r\n        rows,\r\n        click_del_btn,\r\n        selectionChanged,\r\n        click_edit_btn,\r\n        click_copy_btn,\r\n        get_data,\r\n        del_carbon_data\r\n      }\r\n  },\r\n  components: {\r\n      VueGoodTable,\r\n  },\r\n  created(){\r\n    const store = useStore();\r\n    this.get_data()\r\n  },\r\n};\r\n</script>"],"mappings":";OAUkDA,UAAyB;;EAPhEC,KAA4B,EAA5B;IAAA;EAAA;AAA4B;gCAK/BC,mBAAA,CAAuG;EAA/FC,KAAK,EAAC,aAAa;EAACC,EAAE,EAAC,UAAU;EAAEC,OAAO,EAAC;GAAqC,QAAM;gCAC9FH,mBAAA,CAA0D;EAAlDC,KAAK,EAAC,aAAa;EAACC,EAAE,EAAC;GAAY,QAAM;gCACjDF,mBAAA,CAA4E;EAAvEC,KAAK,EAAC,aAAa;EAAEC,EAAE,EAAC,YAAY;EAACE,GAAyB,EAAzBN,UAAyB;EAACO,GAAG,EAAC;;;;;uBAR9EC,mBAAA,CA+BM,cA9BFN,mBAAA,CAQM,OARNO,UAQM,GAPJP,mBAAA,CAA+E;IAAvEC,KAAK,EAAC,aAAa;IAACC,EAAE,EAAC,SAAS;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,aAAa;KAAI,MAAI,GACtEZ,mBAAA,CAAiF;IAAzEC,KAAK,EAAC,aAAa;IAACC,EAAE,EAAC,UAAU;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAE,cAAc;KAAI,MAAI,GACxEb,mBAAA,CAAkF;IAA1EC,KAAK,EAAC,aAAa;IAACC,EAAE,EAAC,UAAU;IAAGM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAG,cAAc;KAAI,MAAI,GAEzEC,UAAuG,EACvGC,UAA0D,EAC1DC,UAA4E,C,GAE9EC,YAAA,CAoBiBC,yBAAA;IAnBRC,oBAAoB,EAAET,MAAA,CAAAU,gBAAgB;IAC1CC,OAAO,EAAEX,MAAA,CAAAW,OAAO;IAChBC,IAAI,EAAEZ,MAAA,CAAAY,IAAI;IACV,gBAAc,EAAE;;;;KAIhB;IACA,cAAY,EAAE;MAAAC,OAAA;IAAA,CAAgB;IAC9B,oBAAkB,EAAE;;;;;;sBAMrB,MAGe,CAHfC,mBAAA,sVAGe,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}