{"ast":null,"code":"import 'vue-good-table-next/dist/vue-good-table-next.css';\nimport popUp from './pop-up.vue';\nimport { VueGoodTable } from 'vue-good-table-next';\nimport { useStore } from \"vuex\";\nimport { computed, ref } from 'vue';\nexport default {\n  name: 'my-component',\n  setup() {\n    var text = ref('');\n    var columns = [{\n      label: '탄소 배출 내용',\n      field: 'CarbonActivity'\n    }, {\n      label: '활동 데이터',\n      field: 'data',\n      type: 'number'\n    }, {\n      label: '탄소 배출량',\n      field: 'emissions',\n      type: 'number'\n    }, {\n      label: '시작 날짜',\n      field: 'StartDate',\n      type: 'date',\n      dateInputFormat: 'yyyy-MM-dd',\n      dateOutputFormat: 'yyyy-MM-dd'\n    }, {\n      label: '종료 날짜',\n      field: 'EndDate',\n      type: 'date',\n      dateInputFormat: 'yyyy-MM-dd',\n      dateOutputFormat: 'yyyy-MM-dd'\n    }, {\n      label: '스코프',\n      field: 'scope'\n    }];\n    var rows = ref([]);\n    function selectionChanged(params) {\n      text.value = params.selectedRows;\n\n      //선택된 행들을 리스트 형태로 반환 {0: Proxy, 1: Proxy, 2: Proxy}\n    }\n\n    const store = useStore();\n    function click_del_btn() {\n      store.commit('DelTableContent', text.value);\n    }\n    function click_edit_btn() {\n      console.log(text.value.length);\n      if (text.value.length == 1) {\n        store.commit('SetTableKind', 'table');\n        store.commit('SetEditOpen', text.value);\n      }\n      //수정 팝업창, 수정 정보후 store를 이용해서 저장\n    }\n\n    return {\n      text,\n      columns,\n      rows,\n      popUp,\n      click_del_btn,\n      selectionChanged,\n      click_edit_btn\n    };\n  },\n  components: {\n    VueGoodTable\n  },\n  created() {\n    const store = useStore();\n    this.rows = computed(() => store.state.table);\n    console.log(this.rows);\n  }\n};","map":{"version":3,"names":["popUp","VueGoodTable","useStore","computed","ref","name","setup","text","columns","label","field","type","dateInputFormat","dateOutputFormat","rows","selectionChanged","params","value","selectedRows","store","click_del_btn","commit","click_edit_btn","console","log","length","components","created","state","table"],"sources":["C:\\Users\\User\\Desktop\\대학\\4학년 1학기\\탄소\\co2-emission-management\\vueProject\\src\\components\\measure\\MeasuretableA.vue"],"sourcesContent":["<template>\r\n  <div>\r\n      <div v-if=\"this.rows.length==0\" class=\"table_not\">\r\n          <img style=\"margin-top:10%; width: 5%;\" src=\"@/assets/exclamationMark.png\" alt=\"\"/>\r\n          <div style=\"margin-top:30px\">데이터가 존재하지 않습니다.</div>\r\n      </div>\r\n      <div v-else-if=\"this.rows.length>0\">\r\n        <div style=\"margin-bottom:3vh\">\r\n          <button class= \"measure_btn\" id=\"btn_del_input2\" @click=\"click_del_btn()\">선택 삭제</button> \r\n          <button class= \"measure_btn\" id=\"btn_edit_input2\" @click=\"click_edit_btn()\" style=\"margin-right:1vw; margin-top:1vh;\">수정하기</button>\r\n        </div>\r\n        <vue-good-table\r\n            v-on:selected-rows-change=\"selectionChanged\"\r\n            :columns=\"columns\"\r\n            :rows=\"rows\" \r\n            :select-options=\"{ \r\n              enabled: true,\r\n              disableSelectInfo: true,\r\n              selectOnCheckboxOnly: true,\r\n            }\"\r\n            :sort-options=\"{enabled: false}\"\r\n            :pagination-options=\"{\r\n                enabled: true,\r\n                mode: 'pages',\r\n                perPage: 5\r\n            }\"\r\n            >\r\n        </vue-good-table>\r\n      </div>\r\n      \r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.btn{\r\n  width:20px;\r\n  height: 10px;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport 'vue-good-table-next/dist/vue-good-table-next.css'\r\nimport popUp from './pop-up.vue';\r\nimport { VueGoodTable } from 'vue-good-table-next';\r\nimport { useStore } from \"vuex\"\r\nimport { computed,ref } from 'vue';\r\n\r\nexport default {\r\n  name: 'my-component',\r\n  setup(){\r\n      var text = ref('')\r\n      var columns= [\r\n        {\r\n          label: '탄소 배출 내용',\r\n          field: 'CarbonActivity',\r\n        },\r\n        {\r\n          label: '활동 데이터',\r\n          field: 'data',\r\n          type: 'number',\r\n        },\r\n        {\r\n          label: '탄소 배출량',\r\n          field: 'emissions',\r\n          type: 'number'\r\n        },\r\n        {\r\n          label: '시작 날짜',\r\n          field: 'StartDate',\r\n          type: 'date',\r\n          dateInputFormat: 'yyyy-MM-dd',\r\n          dateOutputFormat: 'yyyy-MM-dd',\r\n        },\r\n        {\r\n          label: '종료 날짜',\r\n          field: 'EndDate',\r\n          type: 'date',\r\n          dateInputFormat: 'yyyy-MM-dd',\r\n          dateOutputFormat: 'yyyy-MM-dd',\r\n        },\r\n        {\r\n          label: '스코프',\r\n          field: 'scope',\r\n        }\r\n      ]\r\n      var rows = ref([])\r\n\r\n      function selectionChanged(params){\r\n        text.value = params.selectedRows\r\n\r\n        //선택된 행들을 리스트 형태로 반환 {0: Proxy, 1: Proxy, 2: Proxy}\r\n      }\r\n\r\n      const store = useStore();\r\n      \r\n      function click_del_btn(){\r\n        store.commit('DelTableContent',text.value);\r\n      }\r\n\r\n      function click_edit_btn(){\r\n        console.log(text.value.length)\r\n        if(text.value.length == 1){\r\n          \r\n          store.commit('SetTableKind','table')\r\n          store.commit('SetEditOpen',text.value)\r\n        } \r\n        //수정 팝업창, 수정 정보후 store를 이용해서 저장\r\n      }\r\n\r\n      return{\r\n        text,\r\n        columns,\r\n        rows,\r\n        popUp,\r\n        click_del_btn,\r\n        selectionChanged,\r\n        click_edit_btn\r\n      }\r\n  },\r\n  components: {\r\n      VueGoodTable,\r\n  },\r\n  created(){\r\n    const store = useStore();\r\n    this.rows = computed(()=>store.state.table);\r\n    console.log(this.rows)\r\n  },\r\n};\r\n</script>"],"mappings":"AAyCA,OAAO,kDAAiD;AACxD,OAAOA,KAAI,MAAO,cAAc;AAChC,SAASC,YAAW,QAAS,qBAAqB;AAClD,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,QAAQ,EAACC,GAAE,QAAS,KAAK;AAElC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAE;IACH,IAAIC,IAAG,GAAIH,GAAG,CAAC,EAAE;IACjB,IAAII,OAAO,GAAE,CACX;MACEC,KAAK,EAAE,UAAU;MACjBC,KAAK,EAAE;IACT,CAAC,EACD;MACED,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE;IACR,CAAC,EACD;MACEF,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE;IACR,CAAC,EACD;MACEF,KAAK,EAAE,OAAO;MACdC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE,MAAM;MACZC,eAAe,EAAE,YAAY;MAC7BC,gBAAgB,EAAE;IACpB,CAAC,EACD;MACEJ,KAAK,EAAE,OAAO;MACdC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,MAAM;MACZC,eAAe,EAAE,YAAY;MAC7BC,gBAAgB,EAAE;IACpB,CAAC,EACD;MACEJ,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE;IACT,EACF;IACA,IAAII,IAAG,GAAIV,GAAG,CAAC,EAAE;IAEjB,SAASW,gBAAgBA,CAACC,MAAM,EAAC;MAC/BT,IAAI,CAACU,KAAI,GAAID,MAAM,CAACE,YAAW;;MAE/B;IACF;;IAEA,MAAMC,KAAI,GAAIjB,QAAQ,EAAE;IAExB,SAASkB,aAAaA,CAAA,EAAE;MACtBD,KAAK,CAACE,MAAM,CAAC,iBAAiB,EAACd,IAAI,CAACU,KAAK,CAAC;IAC5C;IAEA,SAASK,cAAcA,CAAA,EAAE;MACvBC,OAAO,CAACC,GAAG,CAACjB,IAAI,CAACU,KAAK,CAACQ,MAAM;MAC7B,IAAGlB,IAAI,CAACU,KAAK,CAACQ,MAAK,IAAK,CAAC,EAAC;QAExBN,KAAK,CAACE,MAAM,CAAC,cAAc,EAAC,OAAO;QACnCF,KAAK,CAACE,MAAM,CAAC,aAAa,EAACd,IAAI,CAACU,KAAK;MACvC;MACA;IACF;;IAEA,OAAM;MACJV,IAAI;MACJC,OAAO;MACPM,IAAI;MACJd,KAAK;MACLoB,aAAa;MACbL,gBAAgB;MAChBO;IACF;EACJ,CAAC;EACDI,UAAU,EAAE;IACRzB;EACJ,CAAC;EACD0B,OAAOA,CAAA,EAAE;IACP,MAAMR,KAAI,GAAIjB,QAAQ,EAAE;IACxB,IAAI,CAACY,IAAG,GAAIX,QAAQ,CAAC,MAAIgB,KAAK,CAACS,KAAK,CAACC,KAAK,CAAC;IAC3CN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,IAAI;EACvB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}