{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport Tree from \"vue3-tree\";\nimport \"vue3-tree/dist/style.css\";\nexport default {\n  components: {\n    Tree\n  },\n  setup() {\n    const data = ref([{\n      id: 1,\n      label: \"경상대\",\n      nodes: [{\n        id: 2,\n        label: \"상경대학\",\n        nodes: [{\n          id: 3,\n          label: \"경영학과\"\n        }]\n      }, {\n        id: 4,\n        label: \"공과대학\",\n        nodes: [{\n          id: 5,\n          label: \"항공우주 및 소프트웨어 학과\"\n        }, {\n          id: 6,\n          label: \"건축공학과\"\n        }]\n      }]\n    }]);\n    var selected = ref(\"\");\n    const searchText = ref(\"\");\n    const onNodeExpanded = (node, state) => {\n      console.log(\"state: \", state);\n      console.log(\"node: \", node);\n    };\n    const onUpdate = nodes => {\n      console.log(\"nodes:\", nodes);\n    };\n    const onNodeClick = node => {\n      selected.value = node;\n      console.log(\"클릭된 노드\", selected.value);\n    };\n    var num = data.value.length;\n    console.log(num);\n    function showEnter() {\n      enter_btn.value = true;\n    }\n    function closeEnter() {\n      enter_btn.value = false;\n    }\n    function addNode(name) {\n      var list = {\n        id: num,\n        label: name,\n        nodes: \"\"\n      };\n      data.value.push(list);\n      console.log(data.value);\n    }\n    return {\n      data,\n      searchText,\n      onNodeExpanded,\n      onUpdate,\n      onNodeClick,\n      showEnter,\n      closeEnter,\n      addNode,\n      num\n    };\n  }\n};","map":{"version":3,"names":["ref","Tree","components","setup","data","id","label","nodes","selected","searchText","onNodeExpanded","node","state","console","log","onUpdate","onNodeClick","value","num","length","showEnter","enter_btn","closeEnter","addNode","name","list","push"],"sources":["C:\\Users\\ohminjin\\Desktop\\캡스톤\\co2-emission-management\\vueProject\\src\\components\\measure\\Tree-list.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- <div class=\"addGroup_treelist\">\r\n      <span class=\"addGroup_tree_text\">전체</span> <span class=\"addGroup_tree_text\" style=\"color:#3DC984\">{{ num }}</span>\r\n      <button class=\"addGroup_tree_btnAdd\"  @click=\"addNode()\">+　추가하기</button>\r\n    </div> -->\r\n    <Tree style=\"color:black; font-size:2vh;margin-top:5vh\"\r\n    :nodes=\"data\"\r\n    :use-icon=\"true\"\r\n    \r\n    :use-expandable=\"true\"\r\n  \r\n    @nodeClick=\"onNodeClick\"\r\n    />\r\n    <!-- <div class=\"addGroup_initInput\">\r\n      <input class=\"addGroup_initInput_check\" type=\"checkbox\"/>\r\n      <input @keyup.enter=\"addNode(group_name)\" v-model=\"group_name\" class=\"addGroup_initInput_input\" placeholder=\"조직이름을 설정해주세요\"/>\r\n      <button class=\"addGroup_initInput_enter\" @click=\"addNode(group_name)\">↲　입력</button>\r\n    </div> -->\r\n    \r\n  </div>\r\n  \r\n  \r\n</template>\r\n<style>\r\n.addGroup_treelist{\r\n  margin-top:5vh;\r\n}\r\n\r\n.addGroup_tree_text{\r\n  font-size:2.2vh; \r\n  font-weight:900;\r\n}\r\n.addGroup_tree_btnAdd{\r\n  width:6.5vw;\r\n  height: 4vh;\r\n  float:right;\r\n  background: #3DC984;\r\n  border-radius: 6px;\r\n  border:none;\r\n  color:#ffffff;\r\n  font-weight: bolder;\r\n  font-size:1.4vh;\r\n}\r\n.addGroup_initInput{\r\n  margin-top:2vh;\r\n  height: 8vh;\r\n}\r\n.addGroup_initInput_input{\r\n  width:25vw;\r\n  height:4vh;\r\n  margin-left:1vw;\r\n  background: #F7F8F8;\r\n  border: 1px solid #DDE2E6;\r\n  border-radius: 8px 0px 0px 8px;\r\n}\r\n.addGroup_initInput_check{\r\n  width: 2vh;\r\n  height: 2vh;\r\n  vertical-align: middle;\r\n}\r\n.addGroup_initInput_enter{\r\n  width:7vh;\r\n  height:4.4vh;\r\n  background: #ffffff;\r\n  border: 1px solid #E9E9EA;\r\n  border-radius: 0px 8px 8px 0px;\r\n}\r\n\r\n</style>\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport Tree from \"vue3-tree\";\r\nimport \"vue3-tree/dist/style.css\";\r\nexport default {\r\n  components: {\r\n    Tree,\r\n  },\r\n  setup() {\r\n    \r\n    const data = ref([\r\n      {\r\n        id: 1,\r\n        label: \"경상대\",\r\n        nodes: [\r\n          {\r\n            id: 2,\r\n            label: \"상경대학\",\r\n            nodes:[\r\n              {\r\n                id: 3,\r\n                label:\"경영학과\"\r\n              }\r\n            ],\r\n          },\r\n          {\r\n            id: 4,\r\n            label: \"공과대학\",\r\n            nodes: [\r\n              {\r\n                id: 5,\r\n                label: \"항공우주 및 소프트웨어 학과\",\r\n              },\r\n              {\r\n                id: 6,\r\n                label: \"건축공학과\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ]);\r\n    var selected = ref(\"\");\r\n    const searchText = ref(\"\");\r\n    const onNodeExpanded = (node, state) => {\r\n      console.log(\"state: \", state);\r\n      console.log(\"node: \", node);\r\n    };\r\n\r\n    const onUpdate = (nodes) => {\r\n      console.log(\"nodes:\", nodes);\r\n    };\r\n    const onNodeClick = (node) => {\r\n      selected.value = node\r\n      console.log(\"클릭된 노드\",selected.value);\r\n      \r\n    }\r\n    var num = data.value.length\r\n    console.log(num)\r\n    \r\n    function showEnter(){\r\n      \r\n      enter_btn.value = true\r\n    }\r\n    function closeEnter(){\r\n      enter_btn.value = false\r\n    }\r\n    function addNode(name){\r\n      var list = {id:num,label:name,nodes:\"\"}\r\n      data.value.push(list)\r\n      console.log(data.value)\r\n    }\r\n    \r\n  \r\n    return {\r\n      data,\r\n      searchText,\r\n      onNodeExpanded,\r\n      onUpdate,\r\n      onNodeClick,\r\n      showEnter,\r\n      closeEnter,\r\n      addNode,\r\n      num,\r\n   \r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>"],"mappings":";AAuEA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,IAAG,MAAO,WAAW;AAC5B,OAAO,0BAA0B;AACjC,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,KAAKA,CAAA,EAAG;IAEN,MAAMC,IAAG,GAAIJ,GAAG,CAAC,CACf;MACEK,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE,CACL;QACEF,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAC,CACJ;UACEF,EAAE,EAAE,CAAC;UACLC,KAAK,EAAC;QACR;MAEJ,CAAC,EACD;QACED,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,CACL;UACEF,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE;QACT,CAAC,EACD;UACED,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE;QACT,CAAC;MAEL,CAAC;IAEL,CAAC,CACF,CAAC;IACF,IAAIE,QAAO,GAAIR,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMS,UAAS,GAAIT,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMU,cAAa,GAAIA,CAACC,IAAI,EAAEC,KAAK,KAAK;MACtCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,IAAI,CAAC;IAC7B,CAAC;IAED,MAAMI,QAAO,GAAKR,KAAK,IAAK;MAC1BM,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEP,KAAK,CAAC;IAC9B,CAAC;IACD,MAAMS,WAAU,GAAKL,IAAI,IAAK;MAC5BH,QAAQ,CAACS,KAAI,GAAIN,IAAG;MACpBE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACN,QAAQ,CAACS,KAAK,CAAC;IAEtC;IACA,IAAIC,GAAE,GAAId,IAAI,CAACa,KAAK,CAACE,MAAK;IAC1BN,OAAO,CAACC,GAAG,CAACI,GAAG;IAEf,SAASE,SAASA,CAAA,EAAE;MAElBC,SAAS,CAACJ,KAAI,GAAI,IAAG;IACvB;IACA,SAASK,UAAUA,CAAA,EAAE;MACnBD,SAAS,CAACJ,KAAI,GAAI,KAAI;IACxB;IACA,SAASM,OAAOA,CAACC,IAAI,EAAC;MACpB,IAAIC,IAAG,GAAI;QAACpB,EAAE,EAACa,GAAG;QAACZ,KAAK,EAACkB,IAAI;QAACjB,KAAK,EAAC;MAAE;MACtCH,IAAI,CAACa,KAAK,CAACS,IAAI,CAACD,IAAI;MACpBZ,OAAO,CAACC,GAAG,CAACV,IAAI,CAACa,KAAK;IACxB;IAGA,OAAO;MACLb,IAAI;MACJK,UAAU;MACVC,cAAc;MACdK,QAAQ;MACRC,WAAW;MACXI,SAAS;MACTE,UAAU;MACVC,OAAO;MACPL;IAEF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}