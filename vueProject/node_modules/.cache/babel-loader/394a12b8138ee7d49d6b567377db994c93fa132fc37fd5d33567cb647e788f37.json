{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport login from \"./views/Login\";\nimport group from \"./views/Groups/Group\";\nimport employee from \"./views/Groups/Employee\";\nimport measure from \"./views/measureVue/Measure\";\nimport input1 from \"./views/measureVue/Input1Measure\";\nimport register from \"./views/measureVue/Register\";\nimport insight from \"./views/Insight\";\nimport predict from \"./views/predictCarbonPreview\";\nimport predictCategory from \"./views/predictCategoryDetailLine\";\nimport setting from \"./views/Setting/Setting\";\nimport groupinfo from \"./views/Setting/GroupInfo.vue\";\nimport survey from \"./views/Survey\";\nimport signup from \"./views/Signup/SignupAdmin\";\nimport idinfo from \"./views/Signup/SignupAdminIdInfo\";\nimport signOK from \"./views/Signup/SignupAdminOK\";\nimport signcheck from \"./views/Signup/SignupAdminCheck\";\nimport signupSub from \"./views/Signup/SignupSub\";\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: \"/\",\n    name: \"login\",\n    component: login\n  }, {\n    path: \"/group/employee\",\n    name: \"employee\",\n    component: employee\n  }, {\n    path: \"/group\",\n    name: \"group\",\n    component: group\n  }, {\n    path: \"/measure\",\n    name: \"measure\",\n    component: measure\n  }, {\n    path: \"/measure/input1\",\n    name: \"input1\",\n    component: input1,\n    props: true\n  }, {\n    path: \"/measure/register\",\n    name: \"register\",\n    component: register\n  }, {\n    path: \"/insight\",\n    name: \"insight\",\n    component: insight\n  }, {\n    path: \"/predict\",\n    name: \"predict\",\n    component: predict\n  }, {\n    path: \"/predictCategory\",\n    name: \"predictCategory\",\n    component: predictCategory\n  }, {\n    path: \"/setting\",\n    name: \"setting\",\n    component: setting\n  }, {\n    path: \"/setting/groupinfo\",\n    name: \"groupinfo\",\n    component: groupinfo\n  }, {\n    path: \"/survey\",\n    name: \"survey\",\n    component: survey\n  }, {\n    path: \"/signup\",\n    name: \"signup\",\n    component: signup\n  }, {\n    path: \"/signup/idinfo\",\n    name: \"idinfo\",\n    component: idinfo\n  }, {\n    path: \"/signup/signcheck\",\n    name: \"signcheck\",\n    component: signcheck\n  }, {\n    path: \"/signup/signOK\",\n    name: \"signOK\",\n    component: signOK\n  }, {\n    path: \"/signup/signSub\",\n    name: \"signSub\",\n    component: signupSub\n  }]\n});\nimport { useStore } from \"vuex\";\nimport { computed } from \"vue\";\nconst store = useStore();\nrouter.beforeEach(function (to, from, next) {\n  // to : 이동할 url\n  // from : 현재 url\n  // next : to에서 지정한 url로 이동하기 위해 꼭 호출해야 하는 함수\n  if (computed(() => store.state.accessToken === null)) {\n    //refreshToken은 있고 accessToken이 없을 경우 토큰 재발급 요청\n    //store.dispatch('refreshToken');\n    return next();\n  } else {\n    //accessToken이 있을 경우 진행\n    alert(\"로그인 토큰 확인.\");\n    return next(\"/group\");\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","login","group","employee","measure","input1","register","insight","predict","predictCategory","setting","groupinfo","survey","signup","idinfo","signOK","signcheck","signupSub","router","history","routes","path","name","component","props","useStore","computed","store","beforeEach","to","from","next","state","accessToken","alert"],"sources":["/home/hyemi/carbon/co2-emission-management/vueProject/src/router.js"],"sourcesContent":["import {  createRouter, createWebHistory } from \"vue-router\"\nimport login from \"./views/Login\"\nimport group from \"./views/Groups/Group\"\nimport employee from \"./views/Groups/Employee\"\nimport measure from \"./views/measureVue/Measure\"\nimport input1 from \"./views/measureVue/Input1Measure\"\nimport register from \"./views/measureVue/Register\"\nimport insight from \"./views/Insight\"\nimport predict from \"./views/predictCarbonPreview\"\nimport predictCategory from \"./views/predictCategoryDetailLine\"\nimport setting from \"./views/Setting/Setting\"\nimport groupinfo from \"./views/Setting/GroupInfo.vue\"\nimport survey from \"./views/Survey\"\nimport signup from \"./views/Signup/SignupAdmin\"\nimport idinfo from \"./views/Signup/SignupAdminIdInfo\"\nimport signOK from \"./views/Signup/SignupAdminOK\"\nimport signcheck from \"./views/Signup/SignupAdminCheck\"\nimport signupSub from \"./views/Signup/SignupSub\"\n\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes:[\n    {\n      path: \"/\",\n      name: \"login\",\n      component: login,\n    },\n    {\n      path: \"/group/employee\",\n      name: \"employee\",\n      component: employee,\n    },\n    {\n      path: \"/group\",\n      name: \"group\",\n      component: group,\n      \n    },\n    {\n      path: \"/measure\",\n      name: \"measure\",\n      component: measure,\n    },\n    {\n      path: \"/measure/input1\",\n      name: \"input1\",\n      component: input1 ,\n      props: true\n    },\n    {\n      path: \"/measure/register\",\n      name: \"register\",\n      component: register,\n    },\n    {\n      path: \"/insight\",\n      name: \"insight\",\n      component: insight,\n    },\n    {\n      path: \"/predict\",\n      name: \"predict\",\n      component: predict,\n    },\n    {\n      path: \"/predictCategory\",\n      name: \"predictCategory\",\n      component: predictCategory,\n    },\n    {\n      path: \"/setting\",\n      name: \"setting\",\n      component: setting,\n    },\n    {\n      path: \"/setting/groupinfo\",\n      name: \"groupinfo\",\n      component: groupinfo,\n    },\n    {\n      path: \"/survey\",\n      name: \"survey\",\n      component: survey,\n    },\n    {\n      path: \"/signup\",\n      name: \"signup\",\n      component: signup,\n    },\n    {\n      path: \"/signup/idinfo\",\n      name: \"idinfo\",\n      component: idinfo,\n    },\n    {\n      path: \"/signup/signcheck\",\n      name: \"signcheck\",\n      component: signcheck,\n    },\n    {\n      path: \"/signup/signOK\",\n      name: \"signOK\",\n      component: signOK,\n    },\n    {\n      path: \"/signup/signSub\",\n      name: \"signSub\",\n      component: signupSub,\n    },\n    \n    \n    ]\n})\n\nimport { useStore } from \"vuex\";\nimport { computed } from \"vue\";\nconst store = useStore();\n\nrouter.beforeEach(function (to, from, next) {\n\n  // to : 이동할 url\n  // from : 현재 url\n  // next : to에서 지정한 url로 이동하기 위해 꼭 호출해야 하는 함수\n  if(computed(() => store.state.accessToken===null)){\n    //refreshToken은 있고 accessToken이 없을 경우 토큰 재발급 요청\n    //store.dispatch('refreshToken');\n    return next();\n  }\n  else{\n    //accessToken이 있을 경우 진행\n    alert(\"로그인 토큰 확인.\");\n    return next(\"/group\");\n  }\n});\n\nexport default router"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}