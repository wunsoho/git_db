{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  name: 'accountBookCom',\n  components: {},\n  setup() {\n    var router = useRouter();\n    var store = useStore();\n    var totalMoneyList = ref([{\n      a: 0,\n      account_money: 0\n    }]);\n    var expendMoneyList = ref([]);\n    var incomeMoneyList = ref([]);\n    var accountList = ref([{\n      id: 1,\n      kind: '농협',\n      acc: '352-0932-2852-43',\n      money: 20000,\n      check: false,\n      image: 'NH.png'\n    }, {\n      id: 2,\n      kind: '카카오뱅크',\n      acc: '3333-089-7890-32',\n      money: 20000,\n      check: false,\n      image: 'KaKao.png'\n    }, {\n      id: 3,\n      kind: '국민은행',\n      acc: '950002-00-78904',\n      money: 20000,\n      check: false,\n      image: 'KB.png'\n    }]);\n    var selected_List = ref([]);\n    function openAddContentPopup() {\n      store.commit('openAddContent');\n    }\n    function clickAccount(account) {\n      store.commit(\"clickAccount\", account);\n      router.push({\n        path: '/detail'\n      });\n    }\n\n    //계좌별 잔액 가져오는 API\n    async function get_total_Account() {\n      await axios.get(\"/api/users/getTotalAccount\").then(res => {\n        console.log(res.data);\n        accountList.value = res.data;\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {});\n    }\n    async function get_total_Account_Money() {\n      await axios.get(\"/api/users/getExpendAccountMoney\").then(res => {\n        console.log(res.data);\n        expendMoneyList.value = res.data;\n        console.log('지출', expendMoneyList.value);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {});\n      await axios.get(\"/api/users/getIncomAccountMoney\").then(res => {\n        console.log(res.data);\n        incomeMoneyList.value = res.data;\n        console.log('수익', expendMoneyList.value);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {});\n      for (var i = 0; i < accountList.value.length; i++) {\n        if (i < expendMoneyList.value.length) {\n          accountList.value[i].money = incomeMoneyList.value[i].in_sum - expendMoneyList.value[i].ex_sum;\n        } else {\n          accountList.value[i].money = incomeMoneyList.value[i].in_sum;\n        }\n      }\n    }\n\n    //총 잔액 가져오는 API\n    async function get_total_Money() {\n      await axios.get(\"/api/users/getTotalMoney\").then(res => {\n        console.log(res.data);\n        totalMoneyList.value = res.data;\n        console.log('총돈', totalMoneyList.value);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {});\n    }\n    return {\n      accountList,\n      selected_List,\n      totalMoneyList,\n      openAddContentPopup,\n      clickAccount,\n      get_total_Account,\n      get_total_Money,\n      get_total_Account_Money\n    };\n  },\n  created() {\n    this.get_total_Account();\n    this.get_total_Money();\n    this.get_total_Account_Money();\n  }\n};","map":{"version":3,"names":["ref","useStore","useRouter","useRoute","axios","name","components","setup","router","store","totalMoneyList","a","account_money","expendMoneyList","incomeMoneyList","accountList","id","kind","acc","money","check","image","selected_List","openAddContentPopup","commit","clickAccount","account","push","path","get_total_Account","get","then","res","console","log","data","value","catch","error","finally","get_total_Account_Money","i","length","in_sum","ex_sum","get_total_Money","created"],"sources":["C:\\Users\\gpal6\\DBproject\\git_db\\vueProject\\src\\components\\accountBook\\AccountBookCom.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div>\r\n            <div>\r\n                <div class=\"title\">이정원님의 총 자산</div>\r\n            </div>\r\n            <!-- 총 계좌정보 -->\r\n            <div class=\"block\" style=\"margin-bottom:12vh\">\r\n                <div style=\"text-align: center;\">\r\n                    {{ totalMoneyList }}\r\n                    <div id=\"total-money\" class=\"title block-title\">{{totalMoneyList[0].account_money}}</div>\r\n                    <div id=\"원\" class=\"title block-title\">원</div>\r\n                </div>\r\n            </div>\r\n            <!-- 계좌 정보 -->\r\n            <div class=\"block1\" v-for=\"account, i in accountList\" @click=\"clickAccount(account)\">\r\n                <img :src=\"require(`@/assets/${account.image}`)\" />\r\n                <div class=\"detail-info\" id=\"account-kind\">{{account.kind}}</div>\r\n                <div class=\"detail-info\" id=\"account-acc\"  >{{account.acc}}</div>\r\n                <div class=\"account-cash\" style=\"font-size: 25px; margin-top:0; \">{{account.money}}</div>\r\n                <span id=\"원\" class=\"title block1-title\">원</span>\r\n                \r\n            </div>\r\n                \r\n        </div>\r\n        <div class=\"title add-btn\" @click=\"openAddContentPopup()\">+계좌 추가하기</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {ref} from 'vue'\r\nimport {useStore} from 'vuex'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport axios from 'axios'\r\n\r\nexport default{ \r\n    name:'accountBookCom',\r\n    components:{\r\n    },\r\n    \r\n    setup(){\r\n        var router = useRouter()\r\n        var store = useStore()\r\n        var totalMoneyList = ref([{\r\n            a : 0,\r\n            account_money:  0\r\n        }])\r\n        var expendMoneyList = ref([])\r\n        var incomeMoneyList = ref([])\r\n        var accountList = ref([\r\n            {\r\n                id:1,\r\n                kind : '농협',\r\n                acc: '352-0932-2852-43',\r\n                money: 20000,\r\n                check: false,\r\n                image: 'NH.png'\r\n                \r\n            }, \r\n            {\r\n                id:2,\r\n                kind : '카카오뱅크',\r\n                acc: '3333-089-7890-32',\r\n                money: 20000,\r\n                check: false,\r\n                image: 'KaKao.png'\r\n            },\r\n            {\r\n                id:3,\r\n                kind : '국민은행',\r\n                acc: '950002-00-78904',\r\n                money: 20000,\r\n                check: false,\r\n                image: 'KB.png'\r\n            }\r\n        ])\r\n\r\n        var selected_List = ref([])\r\n\r\n        function openAddContentPopup(){\r\n            store.commit('openAddContent')\r\n        }\r\n        function clickAccount(account){\r\n            store.commit(\"clickAccount\",account)\r\n            router.push({ path: '/detail' })\r\n        }\r\n\r\n        //계좌별 잔액 가져오는 API\r\n        async function get_total_Account(){\r\n            await axios.get(\"/api/users/getTotalAccount\").then(res => {\r\n                console.log(res.data)\r\n                accountList.value = res.data\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n            .finally(() => {\r\n            })\r\n        }\r\n\r\n        async function get_total_Account_Money(){\r\n            await axios.get(\"/api/users/getExpendAccountMoney\").then(res => {\r\n                console.log(res.data)\r\n                expendMoneyList.value = res.data\r\n                console.log('지출',expendMoneyList.value)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n            .finally(() => {\r\n            })\r\n\r\n            await axios.get(\"/api/users/getIncomAccountMoney\").then(res => {\r\n                console.log(res.data)\r\n                incomeMoneyList.value = res.data\r\n                console.log('수익',expendMoneyList.value)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n            .finally(() => {\r\n            })\r\n\r\n            for (var i=0; i<accountList.value.length; i++){\r\n                if(i<expendMoneyList.value.length){\r\n                    accountList.value[i].money = incomeMoneyList.value[i].in_sum - expendMoneyList.value[i].ex_sum\r\n                }\r\n                else{\r\n                    accountList.value[i].money = incomeMoneyList.value[i].in_sum\r\n                }\r\n                \r\n            }\r\n\r\n        }\r\n\r\n        //총 잔액 가져오는 API\r\n        async function get_total_Money(){\r\n            await axios.get(\"/api/users/getTotalMoney\").then(res => {\r\n                console.log(res.data)\r\n                totalMoneyList.value = res.data\r\n                console.log('총돈',totalMoneyList.value)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n            .finally(() => {\r\n            })\r\n        }\r\n\r\n        return{\r\n            accountList,\r\n            selected_List,\r\n            totalMoneyList,\r\n            openAddContentPopup,\r\n            clickAccount,\r\n            get_total_Account,\r\n            get_total_Money,\r\n            get_total_Account_Money,\r\n        }\r\n    },\r\n    created(){\r\n        this.get_total_Account()\r\n        this.get_total_Money()\r\n        this.get_total_Account_Money()\r\n    },\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n.title{\r\n    font-size:2.5vh;\r\n    font-weight: bolder;\r\n    display:inline-block;\r\n    margin-top:3vh\r\n}\r\n\r\n.block{\r\n    width:40vw; \r\n    height:13vh;\r\n    border-radius: 1vh; \r\n    background-color: #FFFFFF;\r\n    margin-top:3vh;\r\n\r\n}\r\n.block-title{\r\n    font-size:5vh;\r\n    height:13vh;\r\n    line-height: 6vh;\r\n}\r\n#total-money{\r\n    color:#13005D\r\n}\r\n#원{\r\n    margin-left:7vw;\r\n\r\n}\r\n.block1 > img {\r\n    margin-top:1vh;\r\n    margin-left:2vw;\r\n    float:left;\r\n    width:60px; \r\n    height:60px;\r\n}\r\n.block1{\r\n    width:38vw; \r\n    height:12vh;\r\n    border-radius: 1vh; \r\n    background-color: #E7E7E7;\r\n    margin-top:3vh;\r\n    padding:2vh\r\n}\r\n.detail-info{\r\n    display:inline-block;\r\n    line-height: 2vh;\r\n    height: 2vh; \r\n    font-size:1.8vh;\r\n    font-weight: 600;\r\n}\r\n.account-cash{\r\n    width:8vw; \r\n    text-align: right;\r\n    font-size:5vh;\r\n    font-weight: 900;\r\n    margin-left:5vw;\r\n    display:inline-block;\r\n}\r\n#account-acc{\r\n    width:19vw;\r\n    margin-left:1vw;\r\n}\r\n#account-kind{\r\n    color:#616161; \r\n    margin-left:3vw;\r\n    text-align:right; \r\n\r\n}\r\n.add-btn{\r\n    float:right; \r\n    color:#146390;\r\n    margin-right: 30vw;\r\n}\r\n.add-btn:hover{\r\n    cursor: pointer;\r\n}\r\n</style>"],"mappings":";AA8BA,SAAQA,GAAG,QAAO,KAAI;AACtB,SAAQC,QAAQ,QAAO,MAAK;AAC5B,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAW;AAC/C,OAAOC,KAAI,MAAO,OAAM;AAExB,eAAc;EACVC,IAAI,EAAC,gBAAgB;EACrBC,UAAU,EAAC,CACX,CAAC;EAEDC,KAAKA,CAAA,EAAE;IACH,IAAIC,MAAK,GAAIN,SAAS,EAAC;IACvB,IAAIO,KAAI,GAAIR,QAAQ,EAAC;IACrB,IAAIS,cAAa,GAAIV,GAAG,CAAC,CAAC;MACtBW,CAAA,EAAI,CAAC;MACLC,aAAa,EAAG;IACpB,CAAC,CAAC;IACF,IAAIC,eAAc,GAAIb,GAAG,CAAC,EAAE;IAC5B,IAAIc,eAAc,GAAId,GAAG,CAAC,EAAE;IAC5B,IAAIe,WAAU,GAAIf,GAAG,CAAC,CAClB;MACIgB,EAAE,EAAC,CAAC;MACJC,IAAG,EAAI,IAAI;MACXC,GAAG,EAAE,kBAAkB;MACvBC,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE;IAEX,CAAC,EACD;MACIL,EAAE,EAAC,CAAC;MACJC,IAAG,EAAI,OAAO;MACdC,GAAG,EAAE,kBAAkB;MACvBC,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE;IACX,CAAC,EACD;MACIL,EAAE,EAAC,CAAC;MACJC,IAAG,EAAI,MAAM;MACbC,GAAG,EAAE,iBAAiB;MACtBC,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE;IACX,EACH;IAED,IAAIC,aAAY,GAAItB,GAAG,CAAC,EAAE;IAE1B,SAASuB,mBAAmBA,CAAA,EAAE;MAC1Bd,KAAK,CAACe,MAAM,CAAC,gBAAgB;IACjC;IACA,SAASC,YAAYA,CAACC,OAAO,EAAC;MAC1BjB,KAAK,CAACe,MAAM,CAAC,cAAc,EAACE,OAAO;MACnClB,MAAM,CAACmB,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAU,CAAC;IACnC;;IAEA;IACA,eAAeC,iBAAiBA,CAAA,EAAE;MAC9B,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAACC,GAAE,IAAK;QACtDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI;QACpBpB,WAAW,CAACqB,KAAI,GAAIJ,GAAG,CAACG,IAAG;MAC/B,CAAC,EACAE,KAAK,CAACC,KAAI,IAAK;QACZL,OAAO,CAACC,GAAG,CAACI,KAAK;MACrB,CAAC,EACAC,OAAO,CAAC,MAAM,CACf,CAAC;IACL;IAEA,eAAeC,uBAAuBA,CAAA,EAAE;MACpC,MAAMpC,KAAK,CAAC0B,GAAG,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAACC,GAAE,IAAK;QAC5DC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI;QACpBtB,eAAe,CAACuB,KAAI,GAAIJ,GAAG,CAACG,IAAG;QAC/BF,OAAO,CAACC,GAAG,CAAC,IAAI,EAACrB,eAAe,CAACuB,KAAK;MAC1C,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZL,OAAO,CAACC,GAAG,CAACI,KAAK;MACrB,CAAC,EACAC,OAAO,CAAC,MAAM,CACf,CAAC;MAED,MAAMnC,KAAK,CAAC0B,GAAG,CAAC,iCAAiC,CAAC,CAACC,IAAI,CAACC,GAAE,IAAK;QAC3DC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI;QACpBrB,eAAe,CAACsB,KAAI,GAAIJ,GAAG,CAACG,IAAG;QAC/BF,OAAO,CAACC,GAAG,CAAC,IAAI,EAACrB,eAAe,CAACuB,KAAK;MAC1C,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZL,OAAO,CAACC,GAAG,CAACI,KAAK;MACrB,CAAC,EACAC,OAAO,CAAC,MAAM,CACf,CAAC;MAED,KAAK,IAAIE,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC1B,WAAW,CAACqB,KAAK,CAACM,MAAM,EAAED,CAAC,EAAE,EAAC;QAC1C,IAAGA,CAAC,GAAC5B,eAAe,CAACuB,KAAK,CAACM,MAAM,EAAC;UAC9B3B,WAAW,CAACqB,KAAK,CAACK,CAAC,CAAC,CAACtB,KAAI,GAAIL,eAAe,CAACsB,KAAK,CAACK,CAAC,CAAC,CAACE,MAAK,GAAI9B,eAAe,CAACuB,KAAK,CAACK,CAAC,CAAC,CAACG,MAAK;QACjG,OACI;UACA7B,WAAW,CAACqB,KAAK,CAACK,CAAC,CAAC,CAACtB,KAAI,GAAIL,eAAe,CAACsB,KAAK,CAACK,CAAC,CAAC,CAACE,MAAK;QAC/D;MAEJ;IAEJ;;IAEA;IACA,eAAeE,eAAeA,CAAA,EAAE;MAC5B,MAAMzC,KAAK,CAAC0B,GAAG,CAAC,0BAA0B,CAAC,CAACC,IAAI,CAACC,GAAE,IAAK;QACpDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI;QACpBzB,cAAc,CAAC0B,KAAI,GAAIJ,GAAG,CAACG,IAAG;QAC9BF,OAAO,CAACC,GAAG,CAAC,IAAI,EAACxB,cAAc,CAAC0B,KAAK;MACzC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZL,OAAO,CAACC,GAAG,CAACI,KAAK;MACrB,CAAC,EACAC,OAAO,CAAC,MAAM,CACf,CAAC;IACL;IAEA,OAAM;MACFxB,WAAW;MACXO,aAAa;MACbZ,cAAc;MACda,mBAAmB;MACnBE,YAAY;MACZI,iBAAiB;MACjBgB,eAAe;MACfL;IACJ;EACJ,CAAC;EACDM,OAAOA,CAAA,EAAE;IACL,IAAI,CAACjB,iBAAiB,EAAC;IACvB,IAAI,CAACgB,eAAe,EAAC;IACrB,IAAI,CAACL,uBAAuB,EAAC;EACjC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}