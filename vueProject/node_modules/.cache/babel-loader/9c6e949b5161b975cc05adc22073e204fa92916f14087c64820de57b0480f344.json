{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport login from \"./views/Login\";\nimport group from \"./views/Groups/Group\";\nimport employee from \"./views/Groups/Employee\";\nimport measure from \"./views/measureVue/Measure\";\nimport input1 from \"./views/measureVue/Input1Measure\";\nimport register from \"./views/measureVue/Register\";\nimport insight from \"./views/Insight\";\nimport predict from \"./views/predictCarbonPreview\";\nimport predictCategory from \"./views/predictCategoryDetailLine\";\nimport natureCarbon from \"./views/natrueCarbon.vue\";\nimport setting from \"./views/Setting/Setting\";\nimport groupinfo from \"./views/Setting/GroupInfo.vue\";\nimport survey from \"./views/Survey\";\nimport signup from \"./views/Signup/SignupAdmin\";\nimport idinfo from \"./views/Signup/SignupAdminIdInfo\";\nimport signOK from \"./views/Signup/SignupAdminOK\";\nimport signcheck from \"./views/Signup/SignupAdminCheck\";\nimport signupSub from \"./views/Signup/SignupSub\";\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: \"/\",\n    name: \"login\",\n    component: login\n  }, {\n    path: \"/group/employee\",\n    name: \"employee\",\n    component: employee\n  }, {\n    path: \"/group\",\n    name: \"group\",\n    component: group\n  }, {\n    path: \"/measure\",\n    name: \"measure\",\n    component: measure\n  }, {\n    path: \"/measure/input1\",\n    name: \"input1\",\n    component: input1,\n    props: true\n  }, {\n    path: \"/measure/register\",\n    name: \"register\",\n    component: register\n  }, {\n    path: \"/insight\",\n    name: \"insight\",\n    component: insight\n  }, {\n    path: \"/predict\",\n    name: \"predict\",\n    component: predict\n  }, {\n    path: \"/predictCategory\",\n    name: \"predictCategory\",\n    component: predictCategory\n  }, {\n    path: \"/natureCarbon\",\n    name: \"natureCarbon\",\n    component: natureCarbon\n  }, {\n    path: \"/setting\",\n    name: \"setting\",\n    component: setting\n  }, {\n    path: \"/setting/groupinfo\",\n    name: \"groupinfo\",\n    component: groupinfo\n  }, {\n    path: \"/survey\",\n    name: \"survey\",\n    component: survey\n  }, {\n    path: \"/signup\",\n    name: \"signup\",\n    component: signup\n  }, {\n    path: \"/signup/idinfo\",\n    name: \"idinfo\",\n    component: idinfo\n  }, {\n    path: \"/signup/signcheck\",\n    name: \"signcheck\",\n    component: signcheck\n  }, {\n    path: \"/signup/signOK\",\n    name: \"signOK\",\n    component: signOK\n  }, {\n    path: \"/signup/signSub\",\n    name: \"signSub\",\n    component: signupSub\n  }]\n});\nimport { useStore } from \"vuex\";\nimport { computed } from \"vue\";\nconst store = useStore();\nrouter.beforeEach(function (to, from, next) {\n  // to : 이동할 url\n  // from : 현재 url\n  // next : to에서 지정한 url로 이동하기 위해 꼭 호출해야 하는 함수\n  if (computed(() => store.state.accessToken === null)) {\n    //refreshToken은 있고 accessToken이 없을 경우 토큰 재발급 요청\n    //store.dispatch('refreshToken');\n    return next();\n  } else {\n    //accessToken이 있을 경우 진행\n    alert(\"로그인 토큰 확인.\");\n    return next(\"/group\");\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","login","group","employee","measure","input1","register","insight","predict","predictCategory","natureCarbon","setting","groupinfo","survey","signup","idinfo","signOK","signcheck","signupSub","router","history","routes","path","name","component","props","useStore","computed","store","beforeEach","to","from","next","state","accessToken","alert"],"sources":["C:/Users/User/Desktop/대학/4학년 1학기/탄소/co2-emission-management/vueProject/src/router.js"],"sourcesContent":["import {  createRouter, createWebHistory } from \"vue-router\"\r\nimport login from \"./views/Login\"\r\nimport group from \"./views/Groups/Group\"\r\nimport employee from \"./views/Groups/Employee\"\r\nimport measure from \"./views/measureVue/Measure\"\r\nimport input1 from \"./views/measureVue/Input1Measure\"\r\nimport register from \"./views/measureVue/Register\"\r\nimport insight from \"./views/Insight\"\r\nimport predict from \"./views/predictCarbonPreview\"\r\nimport predictCategory from \"./views/predictCategoryDetailLine\"\r\nimport natureCarbon from \"./views/natrueCarbon.vue\"\r\nimport setting from \"./views/Setting/Setting\"\r\nimport groupinfo from \"./views/Setting/GroupInfo.vue\"\r\nimport survey from \"./views/Survey\"\r\nimport signup from \"./views/Signup/SignupAdmin\"\r\nimport idinfo from \"./views/Signup/SignupAdminIdInfo\"\r\nimport signOK from \"./views/Signup/SignupAdminOK\"\r\nimport signcheck from \"./views/Signup/SignupAdminCheck\"\r\nimport signupSub from \"./views/Signup/SignupSub\"\r\n\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes:[\r\n    {\r\n      path: \"/\",\r\n      name: \"login\",\r\n      component: login,\r\n    },\r\n    {\r\n      path: \"/group/employee\",\r\n      name: \"employee\",\r\n      component: employee,\r\n    },\r\n    {\r\n      path: \"/group\",\r\n      name: \"group\",\r\n      component: group,\r\n      \r\n    },\r\n    {\r\n      path: \"/measure\",\r\n      name: \"measure\",\r\n      component: measure,\r\n    },\r\n    {\r\n      path: \"/measure/input1\",\r\n      name: \"input1\",\r\n      component: input1 ,\r\n      props: true\r\n    },\r\n    {\r\n      path: \"/measure/register\",\r\n      name: \"register\",\r\n      component: register,\r\n    },\r\n    {\r\n      path: \"/insight\",\r\n      name: \"insight\",\r\n      component: insight,\r\n    },\r\n    {\r\n      path: \"/predict\",\r\n      name: \"predict\",\r\n      component: predict,\r\n    },\r\n    {\r\n      path: \"/predictCategory\",\r\n      name: \"predictCategory\",\r\n      component: predictCategory,\r\n    },\r\n    {\r\n      path: \"/natureCarbon\",\r\n      name: \"natureCarbon\",\r\n      component: natureCarbon,\r\n    },\r\n    {\r\n      path: \"/setting\",\r\n      name: \"setting\",\r\n      component: setting,\r\n    },\r\n    {\r\n      path: \"/setting/groupinfo\",\r\n      name: \"groupinfo\",\r\n      component: groupinfo,\r\n    },\r\n    {\r\n      path: \"/survey\",\r\n      name: \"survey\",\r\n      component: survey,\r\n    },\r\n    {\r\n      path: \"/signup\",\r\n      name: \"signup\",\r\n      component: signup,\r\n    },\r\n    {\r\n      path: \"/signup/idinfo\",\r\n      name: \"idinfo\",\r\n      component: idinfo,\r\n    },\r\n    {\r\n      path: \"/signup/signcheck\",\r\n      name: \"signcheck\",\r\n      component: signcheck,\r\n    },\r\n    {\r\n      path: \"/signup/signOK\",\r\n      name: \"signOK\",\r\n      component: signOK,\r\n    },\r\n    {\r\n      path: \"/signup/signSub\",\r\n      name: \"signSub\",\r\n      component: signupSub,\r\n    },\r\n    \r\n    \r\n    ]\r\n})\r\n\r\nimport { useStore } from \"vuex\";\r\nimport { computed } from \"vue\";\r\nconst store = useStore();\r\n\r\nrouter.beforeEach(function (to, from, next) {\r\n\r\n  // to : 이동할 url\r\n  // from : 현재 url\r\n  // next : to에서 지정한 url로 이동하기 위해 꼭 호출해야 하는 함수\r\n  if(computed(() => store.state.accessToken===null)){\r\n    //refreshToken은 있고 accessToken이 없을 경우 토큰 재발급 요청\r\n    //store.dispatch('refreshToken');\r\n    return next();\r\n  }\r\n  else{\r\n    //accessToken이 있을 경우 진행\r\n    alert(\"로그인 토큰 확인.\");\r\n    return next(\"/group\");\r\n  }\r\n});\r\n\r\nexport default router"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}