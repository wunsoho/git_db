{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useStore } from \"vuex\";\nimport { defineComponent, ref, reactive, onMounted } from 'vue';\nimport GroupTreeNode from \"./GroupTreeNode.vue\";\nimport axios from \"axios\";\nimport { useRouter } from \"vue-router\";\nexport default defineComponent({\n  async setup() {\n    const store = useStore(); //vuex 사용\n    const router = useRouter();\n    const OnEditGroup = () => store.commit(\"OnEdit\");\n    var IfTreeNull = ref(false);\n    function change() {\n      console.log(this.IfTreeNull);\n      this.IfTreeNull = !this.IfTreeNull;\n    }\n    let selected = ref([]);\n    let treeOrientation = ref(\"0\"); //수직 or수평\n    var treeData = ref({});\n    let testtree = ref({\n      label: 'root',\n      expand: true,\n      some_id: 1,\n      Chief: '하하',\n      Scope1: 1,\n      Children: [{\n        label: '상경대학',\n        some_id: 2,\n        Chief: '히히',\n        something: 'ㅇㅈㅁㅇㅁㅈㅇ'\n      }, {\n        label: '자연대학',\n        some_id: 3,\n        Chief: '호호'\n      }, {\n        label: '공과대학',\n        some_id: 4,\n        expand: false,\n        Children: [{\n          label: '항공소프트웨어공학과',\n          some_id: 5\n        }, {\n          label: '기계공학과',\n          some_id: 6,\n          expand: false,\n          Children: [{\n            label: 'subchild 11',\n            some_id: 7\n          }, {\n            label: 'subchild 22',\n            some_id: 8\n          }]\n        }]\n      }]\n    });\n    const config = {\n      headers: {\n        Authorization: \"Bearer\" + \" \" + store.state.accessToken,\n        \"Content-Type\": \"text/html; charset=utf-8\"\n      }\n    };\n    async function get_tree() {\n      await axios.get(\"/Company/Organization/samsung\", config).then(res => {\n        console.log(res.data);\n        treeData = res.data;\n        store.commit(\"SetGroupTree\", res.data);\n      }).catch(error => {\n        alert(\"로그인 시간이 만료되었습니다.\");\n        console.log(error);\n        router.push('/');\n      }).finally(() => {\n        console.log(\"lender1\");\n        //treeData = testtree\n      });\n    }\n\n    await get_tree();\n    return {\n      get_tree,\n      treeData,\n      selected,\n      treeOrientation,\n      OnEditGroup,\n      IfTreeNull,\n      change,\n      testtree\n    };\n  },\n  name: \"Group-tree\",\n  components: {\n    GroupTreeNode\n  },\n  created() {}\n});","map":{"version":3,"names":["useStore","defineComponent","ref","reactive","onMounted","GroupTreeNode","axios","useRouter","setup","store","router","OnEditGroup","commit","IfTreeNull","change","console","log","selected","treeOrientation","treeData","testtree","label","expand","some_id","Chief","Scope1","Children","something","config","headers","Authorization","state","accessToken","get_tree","get","then","res","data","catch","error","alert","push","finally","name","components","created"],"sources":["C:\\Users\\User\\Desktop\\대학\\4학년 1학기\\탄소\\co2-emission-management\\vueProject\\src\\components\\groups\\Group-tree.vue"],"sourcesContent":["<template>\r\n    <div class=\"group-tree\">\r\n         <!-- 임시 -->\r\n        <div v-if=\"IfTreeNull\"><!-- 그룹이 없으면 보여줌 -->\r\n          <img src=\"@/assets/LockGroup.png\" alt=\"권한 따라 잠금\" class=\"lock-group\">\r\n          <span class=\"group-lock-guide\">회사 조직을 설계하세요</span>\r\n          <button class=\"add-group-button-Intree\" @click=\"OnEditGroup\" type=\"button\">+ 추가하기</button>\r\n        </div>\r\n        <div v-else><!-- 그룹이 있으면 그룹 보여줌 -->\r\n          <blocks-tree  id=\"tree\" :data=\"treeData\" :horizontal=\"treeOrientation=='1'\" :collapsable=\"true\" :props=\"{label: 'label', expand: 'expand', children: 'Children',  key:'id'}\">\r\n            <template #node=\"{data}\" id=\"tree2\" >\r\n                <GroupTreeNode :Scope1=data.Scope1 :Scope2=data.Scope2 :Scope3=data.Scope3 :manager=data.Chief :level=data.id :GroupName=data.label></GroupTreeNode>\r\n            </template>\r\n         </blocks-tree>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n.group-tree{\r\n    min-height: 86vh;   /*header랑 합쳐서 100이 되어야 함*/\r\n    height: inherit;\r\n    position: relative;\r\n    /* 점 배경 */\r\n    background-image: linear-gradient(to bottom, transparent, transparent 10%, #F7F9FB 10%),\r\n      linear-gradient(to right, rgba(0, 0, 0, 0.342), rgba(0, 0, 0, 0.103) 3%, #F7F9FB 10%);\r\n    background-size: 20px 20px;\r\n\r\n    text-align: center;\r\n    max-width: 85vw;\r\n  }\r\n  .lock-group{\r\n    width: 150px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 40%;\r\n    transform: translate(-50%,-50%);\r\n  }\r\n  .group-lock-guide{\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 42%;\r\n    transform: translate(-50%,-50%);\r\n  }\r\n  .add-group-button-Intree{\r\n    width: 110px;\r\n    height: 3.5vh;\r\n    background: #3DC984;\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-weight: 600;\r\n    font-size: 13px;\r\n    \r\n    color: #FFFFFF;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 30%;\r\n    transform: translate(-50%,-50%);\r\n  }\r\n  #tree{\r\n    background: none;\r\n    margin-top: 4vh;\r\n  }\r\n  .org-tree-node-label-inner{\r\n    box-shadow:none !important ;\r\n    padding: 0 !important;\r\n  }\r\n</style>\r\n\r\n\r\n<script>\r\nimport { useStore } from \"vuex\";\r\nimport { defineComponent,ref,reactive,onMounted} from 'vue';\r\nimport GroupTreeNode from \"./GroupTreeNode.vue\"\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"vue-router\";\r\n    export default defineComponent({\r\n       async setup(){\r\n          const store = useStore(); //vuex 사용\r\n          const router = useRouter();\r\n          \r\n          const OnEditGroup = () => store.commit(\"OnEdit\", );\r\n          var IfTreeNull=ref(false);\r\n          function change(){\r\n            console.log(this.IfTreeNull)\r\n            this.IfTreeNull = !this.IfTreeNull\r\n          }\r\n\r\n          let selected = ref([]);\r\n          let treeOrientation = ref(\"0\"); //수직 or수평\r\n          var treeData = ref({}) \r\n          let testtree = ref({\r\n              label: 'root',\r\n              expand: true,\r\n              some_id: 1,\r\n              Chief:'하하',\r\n              Scope1:1,\r\n              Children: [\r\n                  { label: '상경대학', some_id: 2, Chief:'히히',something:'ㅇㅈㅁㅇㅁㅈㅇ'},\r\n                  { label: '자연대학', some_id: 3, Chief:'호호',},\r\n                  { \r\n                      label: '공과대학', \r\n                      some_id: 4, \r\n                      expand: false, \r\n                      Children: [\r\n                          { label: '항공소프트웨어공학과', some_id: 5 },\r\n                          {  \r\n                              label: '기계공학과', \r\n                              some_id: 6, \r\n                              expand: false, \r\n                              Children: [\r\n                                  { label: 'subchild 11', some_id: 7 },\r\n                                  { label: 'subchild 22', some_id: 8 },\r\n                              ]\r\n                          },\r\n                      ]\r\n                  },\r\n              ],\r\n          });\r\n          \r\n          const config = {\r\n            headers:{\r\n              Authorization:\"Bearer\"+\" \"+store.state.accessToken,\r\n              \"Content-Type\": \"text/html; charset=utf-8\",\r\n            }\r\n          }\r\n          async function get_tree(){\r\n              await axios.get(\"/Company/Organization/samsung\",config).then(res => {\r\n                    console.log(res.data)\r\n                    treeData = res.data\r\n                    store.commit(\"SetGroupTree\",res.data);\r\n\r\n                })\r\n                .catch(error => {\r\n                  alert(\"로그인 시간이 만료되었습니다.\")\r\n                  console.log(error)\r\n                  router.push('/');\r\n                })\r\n                .finally(() => {\r\n                  console.log(\"lender1\")\r\n                  //treeData = testtree\r\n                })\r\n            }\r\n\r\n            await get_tree()\r\n\r\n        return {\r\n          get_tree,\r\n          treeData,\r\n          selected,\r\n          treeOrientation,\r\n          OnEditGroup,\r\n          IfTreeNull,change,testtree\r\n          }\r\n        },\r\n        name :\"Group-tree\",\r\n        components:{\r\n            GroupTreeNode\r\n        },\r\n        created(){     \r\n       },   \r\n    })\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}